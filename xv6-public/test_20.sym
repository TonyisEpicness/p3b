00000000 test_20.c
00000000 ulib.c
00000000 printf.c
<<<<<<< HEAD
0000070e putc
00000728 printint
00000b58 digits.0
00000000 umalloc.c
00001040 freep
00000989 morecore
00001044 base
000004bf strcpy
000007b3 printf
0000062a memmove
000006a6 mknod
00000f24 lock
0000055f gets
000006de getpid
000003bf test_and_set
00000f04 num_threads
000009d9 malloc
000006ee sleep
00000109 worker
00000f40 threads
00000f20 lock2
0000066e pipe
0000067e write
000006b6 fstat
0000068e kill
000006ce chdir
00000696 exec
00000666 wait
00000676 read
000006ae unlink
00000706 join
00000f2c global
00000656 fork
000006e6 sbrk
000006f6 uptime
00000f08 __bss_start
00000523 memset
000002bc main
00000481 lock_acquire
000004b1 lock_init
00000f28 size
000004a3 lock_release
000004e5 strcmp
000006d6 dup
00000000 worker2
000005b6 stat
00000f08 _edata
0000104c _end
000006be link
0000065e exit
00000f30 ppid
000005fa atoi
0000050b strlen
0000069e open
000006fe clone
0000053c strchr
000003d0 thread_create
000006c6 mkdir
00000686 close
00000430 thread_join
00000919 free
=======
000006f7 putc
00000711 printint
00000b44 digits.0
00000000 umalloc.c
00001220 freep
00000972 morecore
00001224 base
000004a8 strcpy
0000079c printf
00000613 memmove
0000068f mknod
00000f04 lock
00000548 gets
000006c7 getpid
000003bf test_and_set
00000eec num_threads
000009c2 malloc
000006d7 sleep
00000109 worker
00000f20 threads
00000f00 lock2
00000657 pipe
00000667 write
0000069f fstat
00000677 kill
000006b7 chdir
0000067f exec
0000064f wait
0000065f read
00000697 unlink
000006ef join
00000f0c global
0000063f fork
000006cf sbrk
000006df uptime
00000ef0 __bss_start
0000050c memset
000002bc main
0000046a lock_acquire
0000049a lock_init
00000f08 size
0000048c lock_release
000004ce strcmp
000006bf dup
00000000 worker2
0000059f stat
00000ef0 _edata
0000122c _end
000006a7 link
00000647 exit
00000f10 ppid
000005e3 atoi
000004f4 strlen
00000687 open
000006e7 clone
00000525 strchr
000003d0 thread_create
000006af mkdir
0000066f close
00000446 thread_join
00000902 free
>>>>>>> c59b0f9 (fixed thread_join and join)
